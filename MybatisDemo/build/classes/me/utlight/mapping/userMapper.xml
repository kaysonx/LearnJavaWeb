<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<mapper namespace="me.utlight.mapping.userMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.utlight.entity.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    
    <!-- 开启二级缓存 -->
	<cache/>
    <!-- 
        根据id查询得到一个user对象
     -->
    <select id="getUser" parameterType="int" 
        resultType="me.utlight.entity.User">
        select * from users where id=#{id}
    </select>
    
    <!-- 创建用户 -->
    <insert id="addUser" parameterType="me.utlight.entity.User">
    	insert into users(name,age) values(#{name}, #{age})
    </insert>
    
    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="int">
    	delete from users where id=#{id}
    </delete>
    
    <!-- 修改用户 -->
    <update id="updateUser" parameterType="me.utlight.entity.User">
    	update users set name=#{name},age=#{age} where id=#{id}
    </update>
    
    <!-- 查询全部用户 -->
    <select id="getAllUsers" resultType="me.utlight.entity.User">
    	select * from users
    </select>
</mapper>